/// <auto-generated>
/// This file has been auto-generated by WizardTea v0.0.0.1.
///
/// Do not edit unless you know what you are doing.
/// If there is an issue, file at https://github.com/glomdom/WizardTea/issues/
/// </auto-generated>

using System;
using System.Numerics;

namespace WizardTea;

public struct TimeControllerFlags {
    private ushort _value;

    public AnimType Anim_Type {
        get => (AnimType)((_value & 0x0001) >> 0);
        set => _value = (ushort)((_value & ~0x0001) | (((ushort)value << 0) & 0x0001));
    }

    public CycleType Cycle_Type {
        get => (CycleType)((_value & 0x0006) >> 1);
        set => _value = (ushort)((_value & ~0x0006) | (((ushort)value << 1) & 0x0006));
    }

    public bool Active {
        get => (_value & 0x0008) != 0;
        set => _value = (ushort)(value ? _value | 0x0008 : _value & ~0x0008);
    }

    public bool Play_Backwards {
        get => (_value & 0x0010) != 0;
        set => _value = (ushort)(value ? _value | 0x0010 : _value & ~0x0010);
    }

    public bool Manager_Controlled {
        get => (_value & 0x0020) != 0;
        set => _value = (ushort)(value ? _value | 0x0020 : _value & ~0x0020);
    }

    public bool Compute_Scaled_Time {
        get => (_value & 0x0040) != 0;
        set => _value = (ushort)(value ? _value | 0x0040 : _value & ~0x0040);
    }

    public bool Forced_Update {
        get => (_value & 0x0080) != 0;
        set => _value = (ushort)(value ? _value | 0x0080 : _value & ~0x0080);
    }

    /// <summary>
    /// Implicit cast for this type. May result in loss of data, as we cast to ushort.
    /// </summary>
    public static implicit operator TimeControllerFlags(int value) => new TimeControllerFlags { _value = (ushort)value };
}
