/// <auto-generated>
/// This file has been auto-generated by WizardTea v0.0.0.1.
///
/// Do not edit unless you know what you are doing.
/// If there is an issue, file at https://github.com/glomdom/WizardTea/issues/
/// </auto-generated>

using System;
using System.Numerics;

namespace WizardTea;

public struct bhkWeldInfo {
    private ushort _value;

    public ushort Angle_Edge_1 {
        get => (ushort)((_value & 0x001F) >> 0);
        set => _value = (ushort)((_value & ~0x001F) | (((ushort)value << 0) & 0x001F));
    }

    public ushort Angle_Edge_2 {
        get => (ushort)((_value & 0x03E0) >> 5);
        set => _value = (ushort)((_value & ~0x03E0) | (((ushort)value << 5) & 0x03E0));
    }

    public ushort Angle_Edge_3 {
        get => (ushort)((_value & 0x7C00) >> 10);
        set => _value = (ushort)((_value & ~0x7C00) | (((ushort)value << 10) & 0x7C00));
    }

    public bool Unused_bit {
        get => (_value & 0x8000) != 0;
        set => _value = (ushort)(value ? _value | 0x8000 : _value & ~0x8000);
    }

    /// <summary>
    /// Implicit cast for this type. May result in loss of data, as we cast to ushort.
    /// </summary>
    public static implicit operator bhkWeldInfo(int value) => new bhkWeldInfo { _value = (ushort)value };
}
